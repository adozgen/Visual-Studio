<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fsZel4zQYd0AAAAASUVORK5CYII=
</value>
  </data>
</root>